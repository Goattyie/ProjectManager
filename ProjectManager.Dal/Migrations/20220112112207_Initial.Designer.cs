// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectManager.Dal;

#nullable disable

namespace ProjectManager.Dal.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20220112112207_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Project.Dal.Models.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5379b990-ad12-4b4d-b7c0-4ad16971afb0"),
                            CreateTime = new DateTime(2022, 1, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            ProjectName = "Проект 1",
                            UpdateTime = new DateTime(2022, 1, 12, 14, 22, 7, 658, DateTimeKind.Local).AddTicks(309)
                        },
                        new
                        {
                            Id = new Guid("e9a6f07c-0cc6-42d7-9521-6e5b57e0c5be"),
                            CreateTime = new DateTime(2022, 1, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            ProjectName = "Проект 2",
                            UpdateTime = new DateTime(2022, 1, 12, 13, 22, 7, 658, DateTimeKind.Local).AddTicks(321)
                        },
                        new
                        {
                            Id = new Guid("2f147c0c-bb45-4921-b0a0-8d5ee523bc6d"),
                            CreateTime = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            ProjectName = "Проект 3",
                            UpdateTime = new DateTime(2022, 1, 12, 12, 22, 7, 658, DateTimeKind.Local).AddTicks(325)
                        });
                });

            modelBuilder.Entity("Project.Dal.Models.TaskCommentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("CommentType")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskComments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("62aafd28-8678-4e2e-9ea6-148e0ff46e0f"),
                            CommentType = (byte)1,
                            Content = new byte[] { 208, 159, 209, 128, 208, 184, 208, 178, 208, 181, 209, 130, 44, 32, 208, 188, 208, 184, 209, 128, 33 },
                            TaskId = new Guid("7de5aa29-48b0-4127-bec3-5ccb7cefda57")
                        },
                        new
                        {
                            Id = new Guid("dcdd83f3-d832-40c2-841d-6582ad30d06e"),
                            CommentType = (byte)1,
                            Content = new byte[] { 208, 157, 208, 181, 209, 133, 208, 178, 208, 176, 209, 130, 208, 176, 208, 181, 209, 130, 32, 208, 190, 208, 191, 208, 184, 209, 129, 208, 176, 208, 189, 208, 184, 209, 143, 32, 208, 183, 208, 176, 208, 180, 208, 176, 209, 135, 208, 184, 46 },
                            TaskId = new Guid("09fdf810-670e-41a5-b0ca-1da4c32d34f5")
                        },
                        new
                        {
                            Id = new Guid("be9ac29a-4e87-49dc-8513-5a68c8498784"),
                            CommentType = (byte)1,
                            Content = new byte[] { 208, 151, 208, 176, 208, 180, 208, 176, 209, 135, 209, 131, 32, 208, 189, 208, 181, 32, 209, 128, 208, 181, 209, 136, 208, 184, 209, 130, 209, 140, 46 },
                            TaskId = new Guid("8f4ac320-04c2-42eb-88a2-b082792f7fa4")
                        },
                        new
                        {
                            Id = new Guid("aaf1488f-c71d-416c-a711-6d9db2551f10"),
                            CommentType = (byte)1,
                            Content = new byte[] { 208, 162, 209, 128, 208, 181, 208, 177, 209, 131, 208, 181, 209, 130, 209, 129, 209, 143, 32, 208, 190, 208, 191, 209, 130, 208, 184, 208, 188, 208, 184, 208, 183, 208, 176, 209, 134, 208, 184, 209, 143 },
                            TaskId = new Guid("74750387-4dce-4df4-a65c-93a049440c9a")
                        },
                        new
                        {
                            Id = new Guid("0336d6f1-41d0-4b39-976b-56f291a619bb"),
                            CommentType = (byte)1,
                            Content = new byte[] { 83, 116, 114, 105, 110, 103, 32, 98, 117, 105, 108, 100, 101, 114, 63 },
                            TaskId = new Guid("45a8ea5c-cf9b-49dc-b548-b693ede2f2db")
                        },
                        new
                        {
                            Id = new Guid("7f5b5cc8-5e68-4478-9eeb-e3a2ee49808b"),
                            CommentType = (byte)1,
                            Content = new byte[] { 83, 116, 114, 105, 110, 103, 32, 98, 117, 105, 108, 100, 101, 114 },
                            TaskId = new Guid("c7a689f6-3b18-4809-891a-095fdc9e0425")
                        },
                        new
                        {
                            Id = new Guid("5fcd8a87-2573-468a-8d68-424447a0da74"),
                            CommentType = (byte)1,
                            Content = new byte[] { 46, 78, 101, 116, 32, 208, 184, 208, 187, 208, 184, 32, 46, 78, 101, 116, 32, 67, 111, 114, 101, 63 },
                            TaskId = new Guid("5dff7146-9455-4bea-86c0-273273783148")
                        },
                        new
                        {
                            Id = new Guid("3d27139d-b49a-4b4c-8292-08c01622b94c"),
                            CommentType = (byte)1,
                            Content = new byte[] { 208, 157, 208, 181, 208, 190, 208, 177, 209, 133, 208, 190, 208, 180, 208, 184, 208, 188, 208, 190, 32, 209, 129, 208, 190, 208, 178, 208, 181, 209, 137, 208, 176, 208, 189, 208, 184, 208, 181 },
                            TaskId = new Guid("6876d5ef-2ba5-4e06-abd2-a1b2c4a19b5e")
                        },
                        new
                        {
                            Id = new Guid("92b7f6aa-0887-48fb-ab4b-b795a4c61dbb"),
                            CommentType = (byte)1,
                            Content = new byte[] { 208, 152, 208, 189, 209, 130, 208, 181, 209, 128, 208, 181, 209, 129, 208, 189, 209, 139, 208, 181, 32, 208, 183, 208, 176, 208, 180, 208, 176, 209, 135, 208, 184 },
                            TaskId = new Guid("7de5aa29-48b0-4127-bec3-5ccb7cefda57")
                        },
                        new
                        {
                            Id = new Guid("7b04f6e8-cbd6-499a-a2c4-ef3038b8f43e"),
                            CommentType = (byte)1,
                            Content = new byte[] { 208, 167, 209, 130, 208, 190, 32, 208, 188, 208, 190, 208, 182, 208, 189, 208, 190, 32, 209, 129, 208, 180, 208, 181, 208, 187, 208, 176, 209, 130, 209, 140, 32, 209, 129, 32, 209, 141, 209, 130, 208, 184, 208, 188, 63 },
                            TaskId = new Guid("09fdf810-670e-41a5-b0ca-1da4c32d34f5")
                        },
                        new
                        {
                            Id = new Guid("7adc77dc-3085-44ba-9cf6-de1b64021ee6"),
                            CommentType = (byte)1,
                            Content = new byte[] { 208, 162, 208, 181, 209, 129, 209, 130, 208, 190, 208, 178, 209, 139, 208, 185, 32, 208, 186, 208, 190, 208, 188, 208, 188, 208, 181, 208, 189, 209, 130, 208, 176, 209, 128, 208, 184, 208, 185 },
                            TaskId = new Guid("8f4ac320-04c2-42eb-88a2-b082792f7fa4")
                        },
                        new
                        {
                            Id = new Guid("8b286f92-96a3-4279-97ec-2ffb7eac6a8b"),
                            CommentType = (byte)1,
                            Content = new byte[] { 68, 82, 79, 80, 32, 68, 65, 84, 65, 66, 65, 83, 69 },
                            TaskId = new Guid("74750387-4dce-4df4-a65c-93a049440c9a")
                        });
                });

            modelBuilder.Entity("Project.Dal.Models.TaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CancelDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7de5aa29-48b0-4127-bec3-5ccb7cefda57"),
                            CancelDate = new DateTime(2022, 1, 12, 5, 0, 0, 0, DateTimeKind.Local),
                            CreateDate = new DateTime(2022, 1, 12, 1, 0, 0, 0, DateTimeKind.Local),
                            ProjectId = new Guid("5379b990-ad12-4b4d-b7c0-4ad16971afb0"),
                            StartDate = new DateTime(2022, 1, 12, 2, 0, 0, 0, DateTimeKind.Local),
                            TaskName = "Задача 1",
                            UpdateDate = new DateTime(2022, 1, 12, 3, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("09fdf810-670e-41a5-b0ca-1da4c32d34f5"),
                            CancelDate = new DateTime(2022, 1, 10, 5, 0, 0, 0, DateTimeKind.Local),
                            CreateDate = new DateTime(2022, 1, 10, 1, 0, 0, 0, DateTimeKind.Local),
                            ProjectId = new Guid("2f147c0c-bb45-4921-b0a0-8d5ee523bc6d"),
                            StartDate = new DateTime(2022, 1, 10, 2, 0, 0, 0, DateTimeKind.Local),
                            TaskName = "Задача 2",
                            UpdateDate = new DateTime(2022, 1, 10, 3, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("8f4ac320-04c2-42eb-88a2-b082792f7fa4"),
                            CancelDate = new DateTime(2022, 1, 11, 5, 0, 0, 0, DateTimeKind.Local),
                            CreateDate = new DateTime(2022, 1, 11, 1, 0, 0, 0, DateTimeKind.Local),
                            ProjectId = new Guid("e9a6f07c-0cc6-42d7-9521-6e5b57e0c5be"),
                            StartDate = new DateTime(2022, 1, 11, 2, 0, 0, 0, DateTimeKind.Local),
                            TaskName = "Задача 3",
                            UpdateDate = new DateTime(2022, 1, 11, 3, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("74750387-4dce-4df4-a65c-93a049440c9a"),
                            CancelDate = new DateTime(2022, 1, 12, 5, 0, 0, 0, DateTimeKind.Local),
                            CreateDate = new DateTime(2022, 1, 12, 1, 0, 0, 0, DateTimeKind.Local),
                            ProjectId = new Guid("5379b990-ad12-4b4d-b7c0-4ad16971afb0"),
                            StartDate = new DateTime(2022, 1, 12, 2, 0, 0, 0, DateTimeKind.Local),
                            TaskName = "Задача 4",
                            UpdateDate = new DateTime(2022, 1, 12, 3, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("45a8ea5c-cf9b-49dc-b548-b693ede2f2db"),
                            CancelDate = new DateTime(2022, 1, 11, 5, 0, 0, 0, DateTimeKind.Local),
                            CreateDate = new DateTime(2022, 1, 11, 1, 0, 0, 0, DateTimeKind.Local),
                            ProjectId = new Guid("e9a6f07c-0cc6-42d7-9521-6e5b57e0c5be"),
                            StartDate = new DateTime(2022, 1, 11, 2, 0, 0, 0, DateTimeKind.Local),
                            TaskName = "Задача 5",
                            UpdateDate = new DateTime(2022, 1, 11, 3, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("c7a689f6-3b18-4809-891a-095fdc9e0425"),
                            CancelDate = new DateTime(2022, 1, 11, 5, 0, 0, 0, DateTimeKind.Local),
                            CreateDate = new DateTime(2022, 1, 11, 1, 0, 0, 0, DateTimeKind.Local),
                            ProjectId = new Guid("e9a6f07c-0cc6-42d7-9521-6e5b57e0c5be"),
                            StartDate = new DateTime(2022, 1, 11, 2, 0, 0, 0, DateTimeKind.Local),
                            TaskName = "Задача 6",
                            UpdateDate = new DateTime(2022, 1, 11, 3, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("5dff7146-9455-4bea-86c0-273273783148"),
                            CancelDate = new DateTime(2022, 1, 10, 5, 0, 0, 0, DateTimeKind.Local),
                            CreateDate = new DateTime(2022, 1, 10, 1, 0, 0, 0, DateTimeKind.Local),
                            ProjectId = new Guid("2f147c0c-bb45-4921-b0a0-8d5ee523bc6d"),
                            StartDate = new DateTime(2022, 1, 10, 2, 0, 0, 0, DateTimeKind.Local),
                            TaskName = "Задача 7",
                            UpdateDate = new DateTime(2022, 1, 10, 3, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("6876d5ef-2ba5-4e06-abd2-a1b2c4a19b5e"),
                            CancelDate = new DateTime(2022, 1, 12, 5, 0, 0, 0, DateTimeKind.Local),
                            CreateDate = new DateTime(2022, 1, 12, 1, 0, 0, 0, DateTimeKind.Local),
                            ProjectId = new Guid("5379b990-ad12-4b4d-b7c0-4ad16971afb0"),
                            StartDate = new DateTime(2022, 1, 12, 2, 0, 0, 0, DateTimeKind.Local),
                            TaskName = "Задача 8",
                            UpdateDate = new DateTime(2022, 1, 12, 3, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Project.Dal.Models.TaskCommentEntity", b =>
                {
                    b.HasOne("Project.Dal.Models.TaskEntity", "TaskModel")
                        .WithMany("TaskComments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskModel");
                });

            modelBuilder.Entity("Project.Dal.Models.TaskEntity", b =>
                {
                    b.HasOne("Project.Dal.Models.ProjectEntity", "ProjectModel")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectModel");
                });

            modelBuilder.Entity("Project.Dal.Models.ProjectEntity", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Project.Dal.Models.TaskEntity", b =>
                {
                    b.Navigation("TaskComments");
                });
#pragma warning restore 612, 618
        }
    }
}
